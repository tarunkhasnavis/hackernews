{"ast":null,"code":"var _jsxFileName = \"/Users/tarun/Desktop/my-link/src/MainContent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './MainContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainContent({\n  stories\n}) {\n  _s();\n\n  useEffect(() => {\n    fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json\").then(response => response.json()).then(ids => {\n      ids.map(id => {\n        fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`).then(response => response.json()).then(data => {\n          setStories(prevState => [...prevState, data]);\n          let keyword = longestWord(data.title);\n          console.log(keyword); //   let link = \"https://loremflickr.com/320/240/{keyword}\"\n        });\n      });\n    });\n  }, []); // function longer(champ, contender) {\n  //     return (contender.length > champ.length) ? contender : champ;\n  // }\n\n  function longestWord(str) {\n    var words = str.split(' ');\n    return words.reduce((longest, currVal) => currVal.length > longest.length ? currVal : longest);\n  }\n\n  const formatDate = unix_timestamp => {\n    var d = new Date(); // Gets the current time\n\n    var nowTs = Math.floor(d.getTime() / 1000); // getTime() returns milliseconds, and we need seconds, hence the Math.floor and division by 1000\n\n    var seconds = nowTs - unix_timestamp; // more that two days\n\n    if (seconds > 2 * 24 * 3600) {\n      return \"a few days ago\";\n    } // a day\n\n\n    if (seconds > 24 * 3600) {\n      return \"yesterday\";\n    }\n\n    if (seconds > 3600) {\n      return Math.floor(seconds / 3600) + \" hours ago\";\n    }\n\n    if (seconds > 1800) {\n      return \"Half an hour ago\";\n    }\n\n    if (seconds > 60) {\n      return Math.floor(seconds / 60) + \" minutes ago\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: stories.map(story => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: story.url,\n          children: story.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"by \", story.by]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [story.score, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatDate(story.time)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, story.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainContent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MainContent;\nexport default MainContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"sources":["/Users/tarun/Desktop/my-link/src/MainContent.js"],"names":["React","MainContent","stories","useEffect","fetch","then","response","json","ids","map","id","data","setStories","prevState","keyword","longestWord","title","console","log","str","words","split","reduce","longest","currVal","length","formatDate","unix_timestamp","d","Date","nowTs","Math","floor","getTime","seconds","story","url","by","score","time"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './MainContent.css'\n\nfunction MainContent({ stories }) {\n\n    useEffect(() => {\n        fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json\")\n        .then(response => response.json()) \n        .then(ids => {\n          ids.map(id => {\n            fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`)\n            .then(response => response.json())\n            .then(data => {\n              setStories(prevState => [...prevState, data]);\n              let keyword = longestWord(data.title);\n              console.log(keyword)\n            //   let link = \"https://loremflickr.com/320/240/{keyword}\"\n            })\n          });\n        });\n      }, []);\n\n    // function longer(champ, contender) {\n    //     return (contender.length > champ.length) ? contender : champ;\n    // }\n      \n    function longestWord(str) {\n        var words = str.split(' ');\n        return words.reduce((longest, currVal) => (currVal.length > longest.length) ? currVal : longest)   \n    }\n\n    const formatDate = (unix_timestamp) => {\n        var d=new Date();  // Gets the current time\n        var nowTs = Math.floor(d.getTime()/1000); // getTime() returns milliseconds, and we need seconds, hence the Math.floor and division by 1000\n        var seconds = nowTs-unix_timestamp;\n    \n        // more that two days\n        if (seconds > 2*24*3600) {\n           return \"a few days ago\";\n        }\n        // a day\n        if (seconds > 24*3600) {\n           return \"yesterday\";\n        }\n    \n        if (seconds > 3600) {\n            return Math.floor(seconds/3600) + \" hours ago\";\n        }\n        if (seconds > 1800) {\n           return \"Half an hour ago\";\n        }\n        if (seconds > 60) {\n           return Math.floor(seconds/60) + \" minutes ago\";\n        }\n    }\n\n    return (\n        <div className=\"table\">\n            {stories.map((story) => (\n                <div className=\"card\" key={story.id}>\n                    <div className=\"header\">\n                        <a href={story.url}>{story.title}</a>\n                    </div>\n                    <div className=\"cardInfo\">\n                        <span>by {story.by}</span>\n                        <span>{story.score} points</span>\n                        <span>{formatDate(story.time)}</span>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default MainContent"]},"metadata":{},"sourceType":"module"}